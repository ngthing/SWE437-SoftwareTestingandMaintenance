import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;

public class Template {

    private Map<String, String> variables;

    private String templateText;

    public Template(String templateText) {
        this.variables = new HashMap<String, String>();
        this.templateText = templateText;
    }

    public void set(String name, String value) {
        this.variables.put(name, value);
    }

//    public String evaluate() {
//        String result = templateText;
//        for (Entry<String, String> entry: variables.entrySet()){
//        	String regex = "\\$\\{" + entry.getKey() + "\\}";
//        	result = result.replaceAll(regex, entry.getValue());
//        	
//        }
//        checkForMissingValues(result);
//        return result;
//    }
    
    // Change evaluate() according to chapter 3 
    public String evaluate() {
        TemplateParse parser = new TemplateParse();
        List<String> segments = parser.parse(templateText);
        StringBuilder result = new StringBuilder();
        for (String segment : segments) {
            append(segment, result);
        }
        return result.toString();
    }

    private void checkForMissingValues (String result){
    	if (result.matches(".*\\$\\{.+\\}.*")){
    		throw new MissingValueException();
    	}
    }


}
